//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Common;
using System.Data.Entity.Core.Objects;

namespace WebToolRepository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;

    public partial class WebToolEntities : DbContext
    {
        public WebToolEntities()
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public DbSet<User> Users { get; set; }
        public DbSet<WOL> WOLs { get; set; }

        public virtual ObjectResult<SelectUser_Result> SelectUser(Nullable<int> userId, string userName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));

            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUser_Result>("SelectUser", userIdParameter, userNameParameter);
        }

        public virtual ObjectResult<SelectWOL_Result> SelectWOL(Nullable<int> userId, Nullable<int> pageSize, Nullable<int> startRecord, string orderBy, string wOLName)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));

            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));

            var startRecordParameter = startRecord.HasValue ?
                new ObjectParameter("StartRecord", startRecord) :
                new ObjectParameter("StartRecord", typeof(int));

            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));

            var wOLNameParameter = wOLName != null ?
                new ObjectParameter("WOLName", wOLName) :
                new ObjectParameter("WOLName", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWOL_Result>("SelectWOL", userIdParameter, pageSizeParameter, startRecordParameter, orderByParameter, wOLNameParameter);
        }
    }
}
