# fetch repository as zip archive
shallow_clone: true                 # default is "false"


# build cache to preserve files/folders between builds
cache:
  - WebSite\packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  #- projectA\libs
  - WebSite\node_modules                    # local npm modules
  - '%APPDATA%\npm-cache'             # npm cache


# build Configuration, i.e. Debug, Release, etc.
configuration: Release


environment:
  COVERALLS_REPO_TOKEN:
    secure: oPWlAm7qUsd8UDn+sKevbeqai8QfEDr5CdBFgL5aFSuRJdDzAz226rL6oIsHEDev


services:
  - mssql2008r2sp2      # start sql server 2008
  - iis                 # start IIS

install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node 4.2.4
  # install modules

  # Install Gulp
  - ps: .\Setup.ps1



before_build:
  - nuget restore WebSite\WebTool.sln


# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                    # enable MSBuild parallel builds
  project: WebSite\WebTool.sln      # path to Visual Studio solution or project
  publish_wap: true


# scripts to run after build
after_build:
  # Attach the Database
  - ps: .\appveyor-attachdb-sql.ps1

  # Create the iis website
  - ps: .\CreateIISWebSite.ps1

  # Enable SQL Server name pipe and TCP-IP
  - ps: .\sql-server-ip-and-alias.ps1

  # Test The Database
  - sqlcmd -S "(local)\SQL2008R2SP2" -U "sa" -P "Password12!" -Q "SELECT * FROM information_schema.tables;" -d "master"
  - sqlcmd -S "(local)\SQL2008R2SP2" -U "sa" -P "Password12!" -Q "SELECT * FROM dbo.Users;" -d "WebTool"

  # Test IIS
  - WebSite\Test\BDD\phantomjs.exe WebSite\Test\BDD\phantomjs_Debug.js

  # Run Jasmine
  - karma start "WebSite\Test\Jasmine\webTool.conf.js"



#---------------------------------#
#       tests configuration       #
#---------------------------------#

test_script:


# run tests
- ps: nunit-console.exe ".\WebSite\Test\BDD\bin\$env:CONFIGURATION\BDD.dll"

# run unit tests
- ps: .\WebSite\packages\OpenCover.4.6.166\tools\OpenCover.Console.exe -register:user -target:.\WebSite\packages\NUnit.Runners.2.6.4\tools\nunit-console.exe "-targetargs:"".\WebSite\Test\WebToolService.Test\bin\$env:CONFIGURATION\WebToolService.Test.dll"" /noshadow" -filter:"+[WebToolService]*" -output:opencoverCoverage.xml

- ps: $env:COVERALLS_REPO_TOKEN
- ps: $env:APPVEYOR_REPO_COMMIT
- ps: $env:APPVEYOR_REPO_BRANCH
- ps: $env:APPVEYOR_REPO_COMMIT_AUTHOR
- ps: $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL
- ps: $env:APPVEYOR_REPO_COMMIT_MESSAGE
- ps: $env:APPVEYOR_BUILD_NUMBER

# upload results to AppVeyor
- ps: $wc = New-Object 'System.Net.WebClient'
- ps: $wc.UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestResult.xml))
# upload coverage to Coveralls.net
- ps: .\WebSite\packages\coveralls.net.0.6.0\tools\csmacnz.coveralls.exe --opencover -i opencoverCoverage.xml --repoToken $env:COVERALLS_REPO_TOKEN --commitId $env:APPVEYOR_REPO_COMMIT --commitBranch $env:APPVEYOR_REPO_BRANCH --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE --jobId $env:APPVEYOR_BUILD_NUMBER --serviceName appveyor



#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

    # Deploying to a named environment
  - provider: Environment
    name: leoli.noip.me
    on:
      branch: master
